#!/bin/bash

# Reference
# https://github.com/topojson/us-atlas/blob/master/prepublish
# https://github.com/topojson/world-atlas/blob/master/prepublish
# https://medium.com/@mbostock/command-line-cartography-part-1-897aa8f8ca2c

# Set path to installed node modules to run the script without npm
PATH=$PATH:./node_modules/.bin

# Default variables
NDJSON_MAP_ARGS="(delete d.properties, d)"
NDJSON_FILTER_ARGS='d'
SIMPLIFICATION=$2
QUANTIZATION=$3
AUTONOMOUS_REGIONS_IDS=$4

if [ "$1" = true ]; then
  echo "Adding names to the files"

  # https://github.com/mbostock/ndjson-cli#map
  NDJSON_MAP_ARGS="(name = d.properties.NAMEUNIT, delete d.properties, d.properties={}, d.properties.name=name, d)"
fi

if [ "$4" != all ]; then
  # https://github.com/mbostock/ndjson-cli#filter
  NDJSON_FILTER_ARGS="'${AUTONOMOUS_REGIONS_IDS}'.split(',').includes(d.properties.NATCODE.slice(2, 4))"

  # Change default quantization and simplification to have a sharper map
  if [ "$2" = 0.0001 ]; then
    SIMPLIFICATION=1e-5
  fi
  if [ "$3" = 10000 ]; then
    QUANTIZATION=1e5
  fi
fi

echo "Autonomous regions: $AUTONOMOUS_REGIONS_IDS"
echo "Simplification: $SIMPLIFICATION"
echo "Quantization: $QUANTIZATION"

rm -rvf es
mkdir -p es

if [ ! -d build ]; then
  mkdir build
  curl  "http://centrodedescargas.cnig.es/CentroDescargas/descargaDir" --compressed --data "secuencialDescDir=9000029&aceptCodsLicsDD_0=15" > build/lineas_limite.zip
  unzip -jod build build/lineas_limite.zip recintos_municipales* recintos_provinciales* recintos_autonomicas*
fi

geo2topo -n autonomous_regions=<( \
    shp2json --encoding utf8 -n build/recintos_autonomicas_inspire_peninbal_etrs89.shp \
      | ndjson-filter "$NDJSON_FILTER_ARGS" \
      | ndjson-map '(d.id = d.properties.NATCODE.slice(2, 4), d)'
    shp2json --encoding utf8 -n build/recintos_autonomicas_inspire_canarias_wgs84.shp \
      | ndjson-filter "$NDJSON_FILTER_ARGS" \
      | ndjson-map '(d.id = d.properties.NATCODE.slice(2, 4), d)') \
  | toposimplify -f -p $SIMPLIFICATION \
  | topomerge border=autonomous_regions \
  > es/autonomous_regions.json

geo2topo -n provinces=<( \
    shp2json --encoding utf8 -n build/recintos_provinciales_inspire_peninbal_etrs89.shp \
      | ndjson-filter "$NDJSON_FILTER_ARGS" \
      | ndjson-map '(d.id = d.properties.NATCODE.slice(4, 6), d)'
    shp2json --encoding utf8 -n build/recintos_provinciales_inspire_canarias_wgs84.shp \
      | ndjson-filter "$NDJSON_FILTER_ARGS" \
      | ndjson-map '(d.id = d.properties.NATCODE.slice(4, 6), d)') \
  | toposimplify -f -p $SIMPLIFICATION \
  | topomerge autonomous_regions=provinces -k 'd.properties.NATCODE.slice(2, 4)' \
  | topomerge border=autonomous_regions \
  > es/provinces.json

geo2topo -n municipalities=<( \
    shp2json --encoding utf8 -n build/recintos_municipales_inspire_peninbal_etrs89.shp \
      | ndjson-filter "$NDJSON_FILTER_ARGS" \
      | ndjson-map '(d.id = d.properties.NATCODE.slice(6, 11), d)'
    shp2json --encoding utf8 -n build/recintos_municipales_inspire_canarias_wgs84.shp \
      | ndjson-filter "$NDJSON_FILTER_ARGS" \
      | ndjson-map '(d.id = d.properties.NATCODE.slice(6, 11), d)') \
  | toposimplify -f -p $SIMPLIFICATION \
  | topomerge provinces=municipalities -k 'd.properties.NATCODE.slice(4, 6)' \
  | topomerge autonomous_regions=municipalities -k 'd.properties.NATCODE.slice(2, 4)' \
  | topomerge border=autonomous_regions \
  > es/municipalities.json

# Initialise set of layers
layers=()

# Creates a temp GeoJSON to add our feature names or preproject if needed
temp_layer() {
  cat es/$1.geojson | ndjson-map "$NDJSON_MAP_ARGS" | eval "$GEOPROJECT" > es/.tmp.$1.geojson
}

# Converts our final TopoJSON
to_topojson() {
  geo2topo -n \
    "${layers[@]}" \
    | topoquantize $QUANTIZATION \
    > es/$1.json
}

if [ "$5" = true ]; then
  echo "Preprojecting geodata"

  # https://github.com/d3/d3-geo-projection#geoproject
  GEOPROJECT='geoproject -n -r d3=d3-composite-projections "d3.geoConicConformalSpain()"'

  # Write Canary Islands composition border to a GeoJSON
  # https://github.com/rveciana/d3-composite-projections/blob/master/src/conicConformalSpain.js#L129-L131
  echo '{"type": "LineString", "coordinates": [[-14.0346750, 35.2],[-7.4208899, 35.536988],[-7.359, 33.54359]]}' \
    | geoproject -n "d3.geoEquirectangular().rotate([5, -38.6]).scale(2700)" \
    > es/.tmp.composite_border.geojson
  
  # Add composition border to our layers
  layers+=("composite_border=es/.tmp.composite_border.geojson")
else
  GEOPROJECT='cat'
fi

# Inspired by: https://bl.ocks.org/mbostock/39b34968ad5eab65de1d7da81f78bb27
# Re-compute the topology as a further optimization.
# This consolidates unique sequences of arcs.
# https://github.com/topojson/topojson-simplify/issues/4

# Extract GeoJSON files
topo2geo -n \
  < es/municipalities.json \
  autonomous_regions=es/autonomous_regions.geojson \
  provinces=es/provinces.geojson \
  municipalities=es/municipalities.geojson \
  border=es/border.geojson

# Creates temp layers
temp_layer autonomous_regions
temp_layer provinces
temp_layer municipalities
temp_layer border

# Set default layers and convert autonomous regions
layers+=("autonomous_regions=es/.tmp.autonomous_regions.geojson")
layers+=("border=es/.tmp.border.geojson")
to_topojson autonomous_regions

# Convert provinces
layers+=("provinces=es/.tmp.provinces.geojson")
to_topojson provinces

# Convert municipalities
layers+=("municipalities=es/.tmp.municipalities.geojson")
to_topojson municipalities

# Remove temp files
rm es/.*.geojson es/*.geojson
