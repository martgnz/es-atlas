#!/bin/bash

# Reference
# https://github.com/topojson/us-atlas/blob/master/prepublish
# https://github.com/topojson/world-atlas/blob/master/prepublish
# https://medium.com/@mbostock/command-line-cartography-part-1-897aa8f8ca2c

# Set path to installed node modules to run the script without npm
PATH=$PATH:./node_modules/.bin

# Default variables
NDJSON_MAP_ARGS="{}"
NDJSON_FILTER_ARGS='d'
ADD_NAMES=$1
SIMPLIFICATION=$2
QUANTIZATION=$3
AUTONOMOUS_REGIONS_IDS=$4

logs=()

rm -rvf es
mkdir -p es

if [ "$ADD_NAMES" = true ]; then
  logs+=("+ Adding names to the files")

  # https://github.com/mbostock/ndjson-cli#map
  NDJSON_MAP_ARGS="{name: d.properties.NAMEUNIT}"
fi

if [ "$4" != all ]; then
  # https://github.com/mbostock/ndjson-cli#filter
  NDJSON_FILTER_ARGS="'${AUTONOMOUS_REGIONS_IDS}'.split(',').includes(d.properties.NATCODE.slice(2, 4))"

  # Change default quantization and simplification to have a sharper map
  if [ "$2" = 0.0001 ]; then
    SIMPLIFICATION=1e-5
  fi
  if [ "$3" = 10000 ]; then
    QUANTIZATION=1e5
  fi
fi

logs+=("+ Autonomous regions: $AUTONOMOUS_REGIONS_IDS")
logs+=("+ Simplification: $SIMPLIFICATION")
logs+=("+ Quantization: $QUANTIZATION")

if [ ! -d build ]; then
  mkdir build
  curl  "http://centrodedescargas.cnig.es/CentroDescargas/descargaDir" --compressed --data "secuencialDescDir=9000029&aceptCodsLicsDD_0=15" > build/lineas_limite.zip
  unzip -jod build build/lineas_limite.zip recintos_municipales* recintos_provinciales* recintos_autonomicas*
fi

print_logs() {
    printf '\n%30s\n' |tr " " "-"
    for i in "${logs[@]}"; do 
       echo "$i"; 
    done
    printf '%30s\n\n' |tr " " "-"
}
print_logs

echo '{"type": "LineString", "coordinates": [[-14.0346750, 35.2],[-7.4208899, 35.536988],[-7.359, 33.54359]]}' \
    | geoproject -n "d3.geoEquirectangular().rotate([5, -38.6]).scale(2700)" \
    > es/.tmp.composite_border.geojson

geo2topo -n autonomous_regions=<( \
    shp2json --encoding utf8 -n build/recintos_autonomicas_inspire_peninbal_etrs89.shp \
      | ndjson-filter "$NDJSON_FILTER_ARGS" \
      | ndjson-map '(d.id = d.properties.NATCODE.slice(2, 4), d.properties = {name: d.properties.NAMEUNIT}, d)'
    shp2json --encoding utf8 -n build/recintos_autonomicas_inspire_canarias_wgs84.shp \
      | ndjson-filter "$NDJSON_FILTER_ARGS" \
      | ndjson-map '(d.id = d.properties.NATCODE.slice(2, 4), d.properties = {name: d.properties.NAMEUNIT}, d)') \
  | toposimplify -f -p $SIMPLIFICATION \
  | topomerge border=autonomous_regions \
  | topoquantize $QUANTIZATION \
  > es/autonomous_regions.json

geo2topo -n autonomous_regions=<( \
    shp2json --encoding utf8 -n build/recintos_autonomicas_inspire_peninbal_etrs89.shp \
      | ndjson-filter "$NDJSON_FILTER_ARGS" \
      | ndjson-map '(d.id = d.properties.NATCODE.slice(2, 4), d.properties = {name: d.properties.NAMEUNIT}, d)' \
      | geoproject -n -r d3=d3-composite-projections 'd3.geoConicConformalSpain()'
    shp2json --encoding utf8 -n build/recintos_autonomicas_inspire_canarias_wgs84.shp \
      | ndjson-filter "$NDJSON_FILTER_ARGS" \
      | ndjson-map '(d.id = d.properties.NATCODE.slice(2, 4), d.properties = {name: d.properties.NAMEUNIT}, d)' \
      | geoproject -n -r d3=d3-composite-projections 'd3.geoConicConformalSpain()') \
  composite_border=es/.tmp.composite_border.geojson \
  | toposimplify -f -p 0.25 \
  | topomerge border=autonomous_regions \
  | topoquantize $QUANTIZATION \
  > es/autonomous_regions-conic.json

geo2topo -n provinces=<( \
    shp2json --encoding utf8 -n build/recintos_provinciales_inspire_peninbal_etrs89.shp \
      | ndjson-filter "$NDJSON_FILTER_ARGS" \
      | ndjson-map '(d.id = d.properties.NATCODE.slice(4, 6), d)'
    shp2json --encoding utf8 -n build/recintos_provinciales_inspire_canarias_wgs84.shp \
      | ndjson-filter "$NDJSON_FILTER_ARGS" \
      | ndjson-map '(d.id = d.properties.NATCODE.slice(4, 6), d)') \
  | toposimplify -f -p $SIMPLIFICATION \
  | topomerge autonomous_regions=provinces -k 'd.properties.NATCODE.slice(2, 4)' \
  | topomerge border=autonomous_regions \
  | topoquantize $QUANTIZATION \
  | ndjson-map '(d.objects.border.geometries.forEach(d => d.properties = {}), d)' \
  | ndjson-map '(d.objects.autonomous_regions.geometries.forEach(d => d.properties = {}), d)' \
  | ndjson-map '(d.objects.provinces.geometries.forEach(d => d.properties = {name: d.properties.NAMEUNIT}), d)' \
  > es/provinces.json

geo2topo -n provinces=<( \
  shp2json --encoding utf8 -n build/recintos_provinciales_inspire_peninbal_etrs89.shp \
    | ndjson-filter "$NDJSON_FILTER_ARGS" \
    | ndjson-map '(d.id = d.properties.NATCODE.slice(4, 6), d)' \
    | geoproject -n -r d3=d3-composite-projections 'd3.geoConicConformalSpain()'
  shp2json --encoding utf8 -n build/recintos_provinciales_inspire_canarias_wgs84.shp \
    | ndjson-filter "$NDJSON_FILTER_ARGS" \
    | ndjson-map '(d.id = d.properties.NATCODE.slice(4, 6), d)' \
    | geoproject -n -r d3=d3-composite-projections 'd3.geoConicConformalSpain()') \
  composite_border=es/.tmp.composite_border.geojson \
  | toposimplify -f -p 0.25 \
  | topomerge autonomous_regions=provinces -k 'd.properties.NATCODE.slice(2, 4)' \
  | topomerge border=autonomous_regions \
  | topoquantize $QUANTIZATION \
  | ndjson-map '(d.objects.border.geometries.forEach(d => d.properties = {}), d)' \
  | ndjson-map '(d.objects.autonomous_regions.geometries.forEach(d => d.properties = {}), d)' \
  | ndjson-map '(d.objects.provinces.geometries.forEach(d => d.properties = {name: d.properties.NAMEUNIT}), d)' \
  > es/provinces-conic.json

geo2topo -n municipalities=<( \
    shp2json --encoding utf8 -n build/recintos_municipales_inspire_peninbal_etrs89.shp \
      | ndjson-filter "$NDJSON_FILTER_ARGS" \
      | ndjson-map '(d.id = d.properties.NATCODE.slice(6, 11), d)'
    shp2json --encoding utf8 -n build/recintos_municipales_inspire_canarias_wgs84.shp \
      | ndjson-filter "$NDJSON_FILTER_ARGS" \
      | ndjson-map '(d.id = d.properties.NATCODE.slice(6, 11), d)') \
  | toposimplify -f -p $SIMPLIFICATION \
  | topomerge provinces=municipalities -k 'd.properties.NATCODE.slice(4, 6)' \
  | topomerge autonomous_regions=municipalities -k 'd.properties.NATCODE.slice(2, 4)' \
  | topomerge border=autonomous_regions \
  | topoquantize $QUANTIZATION \
  | ndjson-map '(d.objects.border.geometries.forEach(d => d.properties = {}), d)' \
  | ndjson-map '(d.objects.municipalities.geometries.forEach(d => d.properties = '"$NDJSON_MAP_ARGS"'), d)' \
  | ndjson-map '(d.objects.provinces.geometries.forEach(d => d.properties = {}), d)' \
  | ndjson-map '(d.objects.autonomous_regions.geometries.forEach(d => d.properties = {}), d)' \
  > es/municipalities.json

geo2topo -n municipalities=<( \
    shp2json --encoding utf8 -n build/recintos_municipales_inspire_peninbal_etrs89.shp \
      | ndjson-filter "$NDJSON_FILTER_ARGS" \
      | ndjson-map '(d.id = d.properties.NATCODE.slice(6, 11), d)' \
      | geoproject -n -r d3=d3-composite-projections 'd3.geoConicConformalSpain()'
    shp2json --encoding utf8 -n build/recintos_municipales_inspire_canarias_wgs84.shp \
      | ndjson-filter "$NDJSON_FILTER_ARGS" \
      | ndjson-map '(d.id = d.properties.NATCODE.slice(6, 11), d)' \
      | geoproject -n -r d3=d3-composite-projections 'd3.geoConicConformalSpain()') \
  composite_border=es/.tmp.composite_border.geojson \
  | toposimplify -f -p 0.25 \
  | topomerge provinces=municipalities -k 'd.properties.NATCODE.slice(4, 6)' \
  | topomerge autonomous_regions=municipalities -k 'd.properties.NATCODE.slice(2, 4)' \
  | topomerge border=autonomous_regions \
  | topoquantize $QUANTIZATION \
  | ndjson-map '(d.objects.border.geometries.forEach(d => d.properties = '"$NDJSON_MAP_ARGS"'), d)' \
  | ndjson-map '(d.objects.municipalities.geometries.forEach(d => d.properties = '"$NDJSON_MAP_ARGS"'), d)' \
  | ndjson-map '(d.objects.provinces.geometries.forEach(d => d.properties = {}), d)' \
  | ndjson-map '(d.objects.autonomous_regions.geometries.forEach(d => d.properties = {}), d)' \
  > es/municipalities-conic.json

# Remove temp files
rm es/.*.geojson
